# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Checking out code
      uses: actions/checkout@v2
    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('environment.yml') }}
    - name: Installing miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:        
        activate-environment: chop # environment name is definded in environment.yml
        environment-file: environment.yml
        python-version: ${{ matrix.python-version }}
    - name: Running conda commands
      run: |
        echo $CONDA_DEFAULT_ENV
        conda env list
        pwd
        python --version
        which python
    - name: Install package and dependencies
      run: |
        sudo python setup.py develop
    - name: Dependencies needed for coverage and unit tests
      run: |
        pip install matplotlib
        pip install tqdm
        pip install tensorboardX cox requests
        pip install advertorch copt
        pip install git+https://github.com/RobustBench/robustbench
        pip install coveralls coverage pytest-cov
        pip install dill
    - name: Dependencies needed for sphinx
      run: |
        pip install sphinx sphinx-gallery
        pip install memory_profiler
    - name: Running unit tests
      run: |
        python -m pytest -v --cov=chop
    - name: Publishing code coverage
      run: |
        coveralls

